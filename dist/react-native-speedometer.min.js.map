{"version":3,"file":"react-native-speedometer.min.js","sources":["../src/index.js"],"sourcesContent":["/* eslint import/no-unresolved: [2, { ignore: ['react-native', 'react'] }] */\n/* eslint radix: [\"error\", \"as-needed\"] */\nimport React, { Component } from 'react';\nimport {\n  View,\n  Image,\n  Animated,\n  Easing,\n  Text,\n} from 'react-native';\nimport PropTypes from 'prop-types';\n\n// Utils\nimport calculateDegreeFromLabels from '../src/utils/calculate-degree-from-labels';\nimport calculateLabelFromValue from '../src/utils/calculate-label-from-value';\nimport limitValue from '../src/utils/limit-value';\nimport validateSize from '../src/utils/validate-size';\n\n// Style\nimport style, { width as deviceWidth } from '../src/style';\n\n// eslint-disable-next-line react/prefer-stateless-function\nclass Speedometer extends Component {\n  constructor(props) {\n    super(props);\n    this.speedometerValue = new Animated.Value(props.defaultValue);\n  }\n\n  render() {\n    const {\n      value,\n      size,\n      minValue,\n      maxValue,\n      easeDuration,\n      allowedDecimals,\n      labels,\n      needleImage,\n      wrapperStyle,\n      outerCircleStyle,\n      halfCircleStyle,\n      imageWrapperStyle,\n      imageStyle,\n      innerCircleStyle,\n      labelWrapperStyle,\n      labelStyle,\n      labelNoteStyle,\n      useNativeDriver,\n    } = this.props;\n    const degree = 180;\n    const perLevelDegree = calculateDegreeFromLabels(degree, labels);\n    const label = calculateLabelFromValue(\n      limitValue(value, minValue, maxValue, allowedDecimals), labels, minValue, maxValue,\n    );\n    Animated.timing(\n      this.speedometerValue,\n      {\n        toValue: limitValue(value, minValue, maxValue, allowedDecimals),\n        duration: easeDuration,\n        easing: Easing.linear,\n        useNativeDriver,\n      },\n    ).start();\n\n    const rotate = this.speedometerValue.interpolate({\n      inputRange: [minValue, maxValue],\n      outputRange: ['-90deg', '90deg'],\n    });\n\n    const currentSize = validateSize(size, deviceWidth - 20);\n    return (\n      <View style={[style.wrapper, {\n        width: currentSize,\n        height: currentSize / 2,\n      }, wrapperStyle]}\n      >\n        <View style={[style.outerCircle, {\n          width: currentSize,\n          height: currentSize / 2,\n          borderTopLeftRadius: currentSize / 2,\n          borderTopRightRadius: currentSize / 2,\n        }, outerCircleStyle]}\n        >\n          {labels.map((level, index) => {\n            const circleDegree = 90 + (index * perLevelDegree);\n            return (\n              <View\n                key={level.name}\n                style={[style.halfCircle, {\n                  backgroundColor: level.activeBarColor,\n                  width: currentSize / 2,\n                  height: currentSize,\n                  borderRadius: currentSize / 2,\n                  transform: [\n                    { translateX: currentSize / 4 },\n                    { rotate: `${circleDegree}deg` },\n                    { translateX: (currentSize / 4 * -1) },\n                  ],\n                }, halfCircleStyle]}\n              />\n            );\n          })}\n          <Animated.View style={[style.imageWrapper,\n            {\n              top: -(currentSize / 15),\n              transform: [{ rotate }],\n            },\n            imageWrapperStyle]}\n          >\n            <Image\n              style={[style.image,\n                {\n                  width: currentSize,\n                  height: currentSize,\n                }, imageStyle]}\n              source={needleImage}\n            />\n          </Animated.View>\n          <View style={[style.innerCircle, {\n            width: currentSize * 0.6,\n            height: (currentSize / 2) * 0.6,\n            borderTopLeftRadius: currentSize / 2,\n            borderTopRightRadius: currentSize / 2,\n          }, innerCircleStyle]}\n          />\n        </View>\n        <View style={[style.labelWrapper, labelWrapperStyle]}>\n          <Text style={\n            [style.label, labelStyle]}\n          >\n            {limitValue(value, minValue, maxValue, allowedDecimals)}\n          </Text>\n          <Text style={\n            [style.labelNote, { color: label.labelColor }, labelNoteStyle]}\n          >\n            {label.name}\n          </Text>\n        </View>\n      </View>\n    );\n  }\n}\n\nSpeedometer.defaultProps = {\n  defaultValue: 50,\n  minValue: 0,\n  maxValue: 100,\n  easeDuration: 500,\n  allowedDecimals: 0,\n  labels: [\n    {\n      name: 'Pathetically weak',\n      labelColor: '#ff2900',\n      activeBarColor: '#ff2900',\n    },\n    {\n      name: 'Weak',\n      labelColor: '#ff5400',\n      activeBarColor: '#ff5400',\n    },\n    {\n      name: 'So-so',\n      labelColor: '#f4ab44',\n      activeBarColor: '#f4ab44',\n    },\n    {\n      name: 'Fair',\n      labelColor: '#f2cf1f',\n      activeBarColor: '#f2cf1f',\n    },\n    {\n      name: 'Strong',\n      labelColor: '#14eb6e',\n      activeBarColor: '#14eb6e',\n    },\n    {\n      name: 'Unbelievably strong',\n      labelColor: '#00ff6b',\n      activeBarColor: '#00ff6b',\n    },\n  ],\n  needleImage: require('../images/speedometer-needle.png'),\n  wrapperStyle: {},\n  outerCircleStyle: {},\n  halfCircleStyle: {},\n  imageWrapperStyle: {},\n  imageStyle: {},\n  innerCircleStyle: {},\n  labelWrapperStyle: {},\n  labelStyle: {},\n  labelNoteStyle: {},\n  useNativeDriver: true,\n};\n\nSpeedometer.propTypes = {\n  value: PropTypes.number.isRequired,\n  defaultValue: PropTypes.number,\n  size: PropTypes.number,\n  minValue: PropTypes.number,\n  maxValue: PropTypes.number,\n  easeDuration: PropTypes.number,\n  allowedDecimals: PropTypes.number,\n  labels: PropTypes.array,\n  needleImage: PropTypes.any,\n  wrapperStyle: PropTypes.object,\n  outerCircleStyle: PropTypes.object,\n  halfCircleStyle: PropTypes.object,\n  imageWrapperStyle: PropTypes.object,\n  imageStyle: PropTypes.object,\n  innerCircleStyle: PropTypes.object,\n  labelWrapperStyle: PropTypes.object,\n  labelStyle: PropTypes.object,\n  labelNoteStyle: PropTypes.object,\n  useNativeDriver: PropTypes.bool,\n};\n\nexport default Speedometer;\n"],"names":["Speedometer","props","speedometerValue","Animated","Value","defaultValue","render","this","value","size","minValue","maxValue","easeDuration","allowedDecimals","labels","needleImage","wrapperStyle","outerCircleStyle","halfCircleStyle","imageWrapperStyle","imageStyle","innerCircleStyle","labelWrapperStyle","labelStyle","labelNoteStyle","useNativeDriver","perLevelDegree","calculateDegreeFromLabels","label","calculateLabelFromValue","limitValue","timing","toValue","duration","easing","Easing","linear","start","rotate","interpolate","inputRange","outputRange","currentSize","validateSize","deviceWidth","React","View","style","wrapper","width","height","outerCircle","borderTopLeftRadius","borderTopRightRadius","map","level","index","circleDegree","key","name","halfCircle","backgroundColor","activeBarColor","borderRadius","transform","translateX","imageWrapper","top","Image","image","source","innerCircle","labelWrapper","Text","labelNote","color","labelColor","Component","defaultProps","require","propTypes","PropTypes","number","isRequired","array","any","object","bool"],"mappings":"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"}