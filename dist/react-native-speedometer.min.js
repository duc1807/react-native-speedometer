<<<<<<< HEAD
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t(require("react"),require("react-native"),require("prop-types"),require("./utils/calculate-degree-from-labels.js"),require("./utils/calculate-label-from-value.js"),require("./utils/limit-value.js"),require("./utils/validate-size.js"),require("./style/index.js")):"function"==typeof define&&define.amd?define(["react","react-native","prop-types","./utils/calculate-degree-from-labels.js","./utils/calculate-label-from-value.js","./utils/limit-value.js","./utils/validate-size.js","./style/index.js"],t):(e=e||self).speedometer=t(e.React,e.reactNative,e.PropTypes,e.calculateDegreeFromLabels,e.calculateLabelFromValue,e.limitValue,e.validateSize,e.style)}(this,function(e,t,a,l,r,i,o,u){"use strict";var n="default"in e?e.default:e;a=a&&a.hasOwnProperty("default")?a.default:a,l=l&&l.hasOwnProperty("default")?l.default:l,r=r&&r.hasOwnProperty("default")?r.default:r,i=i&&i.hasOwnProperty("default")?i.default:i,o=o&&o.hasOwnProperty("default")?o.default:o;var s="default"in u?u.default:u;var c=function(e){var a,c;function p(a){var l;return(l=e.call(this,a)||this).speedometerValue=new t.Animated.Value(a.defaultValue),l}return c=e,(a=p).prototype=Object.create(c.prototype),a.prototype.constructor=a,a.__proto__=c,p.prototype.render=function(){var e=this.props,a=e.value,c=e.size,p=e.minValue,d=e.maxValue,m=e.easeDuration,f=e.allowedDecimals,b=e.labels,y=e.needleImage,v=e.wrapperStyle,g=e.outerCircleStyle,h=e.halfCircleStyle,S=e.imageWrapperStyle,C=e.imageStyle,w=e.innerCircleStyle,V=e.labelWrapperStyle,j=e.labelStyle,D=e.labelNoteStyle,R=e.useNativeDriver,q=l(180,b),E=r(i(a,p,d,f),b,p,d);t.Animated.timing(this.speedometerValue,{toValue:i(a,p,d,f),duration:m,easing:t.Easing.linear,useNativeDriver:R}).start();var x=this.speedometerValue.interpolate({inputRange:[p,d],outputRange:["-90deg","90deg"]}),N=o(c,u.width-20);return n.createElement(t.View,{style:[s.wrapper,{width:N,height:N/2},v]},n.createElement(t.View,{style:[s.outerCircle,{width:N,height:N/2,borderTopLeftRadius:N/2,borderTopRightRadius:N/2},g]},b.map(function(e,a){var l=90+a*q;return n.createElement(t.View,{key:e.name,style:[s.halfCircle,{backgroundColor:e.activeBarColor,width:N/2,height:N,borderRadius:N/2,transform:[{translateX:N/4},{rotate:l+"deg"},{translateX:N/4*-1}]},h]})}),n.createElement(t.Animated.View,{style:[s.imageWrapper,{top:-N/15,transform:[{rotate:x}]},S]},n.createElement(t.Image,{style:[s.image,{width:N,height:N},C],source:y})),n.createElement(t.View,{style:[s.innerCircle,{width:.6*N,height:N/2*.6,borderTopLeftRadius:N/2,borderTopRightRadius:N/2},w]})),n.createElement(t.View,{style:[s.labelWrapper,V]},n.createElement(t.Text,{style:[s.label,j]},i(a,p,d,f)),n.createElement(t.Text,{style:[s.labelNote,{color:E.labelColor},D]},E.name)))},p}(e.Component);return c.defaultProps={defaultValue:50,minValue:0,maxValue:100,easeDuration:500,allowedDecimals:0,labels:[{name:"Pathetically weak",labelColor:"#ff2900",activeBarColor:"#ff2900"},{name:"Very weak",labelColor:"#ff5400",activeBarColor:"#ff5400"},{name:"So-so",labelColor:"#f4ab44",activeBarColor:"#f4ab44"},{name:"Fair",labelColor:"#f2cf1f",activeBarColor:"#f2cf1f"},{name:"Strong",labelColor:"#14eb6e",activeBarColor:"#14eb6e"},{name:"Unbelievably strong",labelColor:"#00ff6b",activeBarColor:"#00ff6b"}],needleImage:require("../images/needle2.png"),wrapperStyle:{},outerCircleStyle:{},halfCircleStyle:{},imageWrapperStyle:{},imageStyle:{},innerCircleStyle:{},labelWrapperStyle:{},labelStyle:{},labelNoteStyle:{},useNativeDriver:!0},c.propTypes={value:a.number.isRequired,defaultValue:a.number,size:a.number,minValue:a.number,maxValue:a.number,easeDuration:a.number,allowedDecimals:a.number,labels:a.array,needleImage:a.any,wrapperStyle:a.object,outerCircleStyle:a.object,halfCircleStyle:a.object,imageWrapperStyle:a.object,imageStyle:a.object,innerCircleStyle:a.object,labelWrapperStyle:a.object,labelStyle:a.object,labelNoteStyle:a.object,useNativeDriver:a.bool},c});
//# sourceMappingURL=react-native-speedometer.min.js.map
=======
!(function (e, t) { typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = t(require('react'), require('react-native'), require('prop-types')) : typeof define === 'function' && define.amd ? define(['react', 'react-native', 'prop-types'], t) : (e = e || self).speedometer = t(e.React, e.reactNative, e.PropTypes); }(this, (e, t, r) => {
  const a = 'default' in e ? e.default : e; function l(e, t, r, a) { let l = 0; return isNaN(e) || (l = !isNaN(a) && a > 0 ? parseFloat(e).toFixed(a < 4 ? parseInt(a) : 4) : parseInt(e)), Math.min(Math.max(l, t), r); }r = r && r.hasOwnProperty('default') ? r.default : r; const o = t.Dimensions.get('window').width; const i = t.StyleSheet.create({
    wrapper: { marginVertical: 5, alignSelf: 'center' },
    circleWrapper: { overflow: 'hidden' },
    outerCircle: {
      justifyContent: 'flex-end', alignItems: 'center', overflow: 'hidden', borderColor: '#ffffff', backgroundColor: '#e6e6e6',
    },
    halfCircle: {
      position: 'absolute', top: 0, left: 0, borderTopRightRadius: 0, borderBottomRightRadius: 0,
    },
    imageWrapper: { position: 'absolute', left: 0, zIndex: 10 },
    image: { resizeMode: 'stretch', height: o - 20, width: o - 20 },
    innerCircle: {
      overflow: 'hidden', justifyContent: 'flex-end', alignItems: 'center', backgroundColor: '#ffffff', width: 0.6 * o, height: o / 2 * 0.6, borderTopLeftRadius: o / 2 - 10, borderTopRightRadius: o / 2 - 10,
    },
    labelWrapper: { marginVertical: 5, alignItems: 'center' },
    label: { fontSize: 25, fontWeight: 'bold' },
    labelNote: { fontSize: 16, fontWeight: 'bold' },
  }); const n = (function (e) {
    let r; let n; function u(r) { let a; return (a = e.call(this, r) || this).speedometerValue = new t.Animated.Value(r.defaultValue), a; } return n = e, (r = u).prototype = Object.create(n.prototype), r.prototype.constructor = r, r.__proto__ = n, u.prototype.render = function () {
      const e = this.props; const r = e.value; const n = e.size; const u = e.minValue; const s = e.maxValue; const p = e.easeDuration; const c = e.allowedDecimals; const f = e.labels; const d = e.needleImage; const m = e.wrapperStyle; const b = e.outerCircleStyle; const y = e.halfCircleStyle; const g = e.imageWrapperStyle; const h = e.imageStyle; const C = e.innerCircleStyle; const v = e.labelWrapperStyle; const S = e.labelStyle; const w = e.labelNoteStyle; const V = e.useNativeDriver; const R = (function (e, t) { return e / t.length; }(180, f)); const N = (function (e, t, r, a) { const l = (e - r) / (a - r); return t[Math.round((t.length - 1) * l)]; }(l(r, u, s, c), f, u, s)); t.Animated.timing(this.speedometerValue, {
        toValue: l(r, u, s, c), duration: p, easing: t.Easing.linear, useNativeDriver: V,
      }).start(); const j = this.speedometerValue.interpolate({ inputRange: [u, s], outputRange: ['-90deg', '90deg'] }); const W = (function (e, t) { let r = t; return isNaN(e) || (r = parseInt(e)), r; }(n, o - 20)); return a.createElement(t.View, { style: [i.wrapper, { width: W, height: W / 2 }, m] }, a.createElement(t.View, {
        style: [i.outerCircle, {
          width: W, height: W / 2, borderTopLeftRadius: W / 2, borderTopRightRadius: W / 2,
        }, b],
      }, f.map((e, r) => {
        const l = 90 + r * R; return a.createElement(t.View, {
          key: e.name,
          style: [i.halfCircle, {
            backgroundColor: e.activeBarColor, width: W / 2, height: W, borderRadius: W / 2, transform: [{ translateX: W / 4 }, { rotate: `${l}deg` }, { translateX: W / 4 * -1 }],
          }, y],
        });
      }), a.createElement(t.Animated.View, { style: [i.imageWrapper, { top: -W / 15, transform: [{ rotate: j }] }, g] }, a.createElement(t.Image, { style: [i.image, { width: W, height: W }, h], source: d })), a.createElement(t.View, {
        style: [i.innerCircle, {
          width: 0.6 * W, height: W / 2 * 0.6, borderTopLeftRadius: W / 2, borderTopRightRadius: W / 2,
        }, C],
      })), a.createElement(t.View, { style: [i.labelWrapper, v] }, a.createElement(t.Text, { style: [i.label, S] }, l(r, u, s, c)), a.createElement(t.Text, { style: [i.labelNote, { color: N.labelColor }, w] }, N.name)));
    }, u;
  }(e.Component)); return n.defaultProps = {
    defaultValue: 50, minValue: 0, maxValue: 100, easeDuration: 500, allowedDecimals: 0, labels: [{ name: 'Pathetically weak', labelColor: '#ff2900', activeBarColor: '#ff2900' }, { name: 'Very weak', labelColor: '#ff5400', activeBarColor: '#ff5400' }, { name: 'So-so', labelColor: '#f4ab44', activeBarColor: '#f4ab44' }, { name: 'Fair', labelColor: '#f2cf1f', activeBarColor: '#f2cf1f' }, { name: 'Strong', labelColor: '#14eb6e', activeBarColor: '#14eb6e' }, { name: 'Unbelievably strong', labelColor: '#00ff6b', activeBarColor: '#00ff6b' }], needleImage: require('../images/speedometer-needle.png'), wrapperStyle: {}, outerCircleStyle: {}, halfCircleStyle: {}, imageWrapperStyle: {}, imageStyle: {}, innerCircleStyle: {}, labelWrapperStyle: {}, labelStyle: {}, labelNoteStyle: {}, useNativeDriver: !0,
  }, n.propTypes = {
    value: r.number.isRequired, defaultValue: r.number, size: r.number, minValue: r.number, maxValue: r.number, easeDuration: r.number, allowedDecimals: r.number, labels: r.array, needleImage: r.any, wrapperStyle: r.object, outerCircleStyle: r.object, halfCircleStyle: r.object, imageWrapperStyle: r.object, imageStyle: r.object, innerCircleStyle: r.object, labelWrapperStyle: r.object, labelStyle: r.object, labelNoteStyle: r.object, useNativeDriver: r.bool,
  }, n;
}));
// # sourceMappingURL=react-native-speedometer.min.js.map
>>>>>>> de490f419fd8a90025ff4818e25910b4189d56f4
